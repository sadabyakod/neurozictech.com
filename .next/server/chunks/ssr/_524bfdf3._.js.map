{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/shared/lib/image-external.tsx","turbopack:///[project]/node_modules/next/image.js","turbopack:///[project]/src/components/Navigation.tsx","turbopack:///[project]/src/components/ScrollAnimationOptimizer.tsx","turbopack:///[project]/src/components/ChatBot.tsx","turbopack:///[project]/src/components/FloatingActionButton.tsx"],"sourcesContent":["import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n","module.exports = require('./dist/shared/lib/image-external')\n","'use client';\r\n\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { useState } from 'react';\r\n\r\nexport default function Navigation() {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => setIsMenuOpen(!isMenuOpen);\r\n\r\n  return (\r\n    <nav className=\"bg-white/90 backdrop-blur-md shadow-lg fixed w-full top-0 z-50 border-b border-white/20\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between h-16\">\r\n          <div className=\"flex items-center\">\r\n            <Link href=\"/\" className=\"flex-shrink-0 flex items-center group\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 bg-gradient-to-r from-blue-400 to-indigo-400 rounded-lg blur-sm opacity-75 group-hover:opacity-100 transition-opacity duration-300\"></div>\r\n                <Image \r\n                  src=\"/company-logo.jpeg\" \r\n                  alt=\"Neurozic Software Solutions Logo\" \r\n                  width={40} \r\n                  height={40} \r\n                  className=\"relative mr-3 rounded-lg transform group-hover:scale-110 transition-transform duration-300\"\r\n                />\r\n              </div>\r\n              <span className=\"text-xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent hidden sm:block group-hover:from-blue-700 group-hover:to-indigo-700 transition-all duration-300\">Neurozic Software Solutions</span>\r\n              <span className=\"text-lg font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent sm:hidden\">Neurozic</span>\r\n            </Link>\r\n          </div>\r\n          \r\n          {/* Desktop Menu */}\r\n          <div className=\"hidden md:flex items-center space-x-8\">\r\n            <Link href=\"/\" className=\"relative text-gray-700 hover:text-blue-600 transition-colors duration-300 font-medium group\">\r\n              Home\r\n              <span className=\"absolute inset-x-0 bottom-0 h-0.5 bg-gradient-to-r from-blue-600 to-indigo-600 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></span>\r\n            </Link>\r\n            <Link href=\"/about\" className=\"relative text-gray-700 hover:text-blue-600 transition-colors duration-300 font-medium group\">\r\n              About\r\n              <span className=\"absolute inset-x-0 bottom-0 h-0.5 bg-gradient-to-r from-blue-600 to-indigo-600 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></span>\r\n            </Link>\r\n            <Link href=\"/services\" className=\"relative text-gray-700 hover:text-blue-600 transition-colors duration-300 font-medium group\">\r\n              Services\r\n              <span className=\"absolute inset-x-0 bottom-0 h-0.5 bg-gradient-to-r from-blue-600 to-indigo-600 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></span>\r\n            </Link>\r\n            <Link href=\"/contact\" className=\"relative text-gray-700 hover:text-blue-600 transition-colors duration-300 font-medium group\">\r\n              Contact\r\n              <span className=\"absolute inset-x-0 bottom-0 h-0.5 bg-gradient-to-r from-blue-600 to-indigo-600 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></span>\r\n            </Link>\r\n            <Link \r\n              href=\"/contact\" \r\n              className=\"relative bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-6 py-2 rounded-full hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 font-medium transform hover:scale-105 shadow-lg hover:shadow-xl\"\r\n            >\r\n              Get Started\r\n            </Link>\r\n          </div>\r\n\r\n          {/* Mobile menu button */}\r\n          <div className=\"md:hidden flex items-center\">\r\n            <button\r\n              onClick={toggleMenu}\r\n              className=\"text-gray-700 hover:text-blue-600 focus:outline-none focus:text-blue-600\"\r\n            >\r\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                {isMenuOpen ? (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                ) : (\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                )}\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile Menu */}\r\n        {isMenuOpen && (\r\n          <div className=\"md:hidden\">\r\n            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t\">\r\n              <Link \r\n                href=\"/\" \r\n                className=\"block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Home\r\n              </Link>\r\n              <Link \r\n                href=\"/about\" \r\n                className=\"block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                About\r\n              </Link>\r\n              <Link \r\n                href=\"/services\" \r\n                className=\"block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Services\r\n              </Link>\r\n              <Link \r\n                href=\"/contact\" \r\n                className=\"block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Contact\r\n              </Link>\r\n              <Link \r\n                href=\"/contact\" \r\n                className=\"block mx-3 my-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-center\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Get Started\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n}","'use client';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ScrollAnimationOptimizer() {\r\n  useEffect(() => {\r\n    // Optimize scroll performance\r\n    const html = document.documentElement;\r\n    html.style.scrollBehavior = 'smooth';\r\n\r\n    // Reduce motion for users who prefer it\r\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n    \r\n    if (prefersReducedMotion.matches) {\r\n      // Disable smooth scrolling for users who prefer reduced motion\r\n      html.style.scrollBehavior = 'auto';\r\n      \r\n      // Add class to body to disable animations\r\n      document.body.classList.add('reduce-motion');\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      html.style.scrollBehavior = '';\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}","'use client';\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { ChatMessage, ChatResponse, EmailFormData, EmailResponse } from '@/types/chat';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  showEmailForm?: boolean;\r\n}\r\n\r\ninterface ChatBotProps {\r\n  className?: string;\r\n}\r\n\r\nconst ChatBot: React.FC<ChatBotProps> = ({ className = '' }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: '1',\r\n      text: 'Hello! Welcome to Neurozic Software Solutions. How can I help you today?',\r\n      sender: 'bot',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [showEmailForm, setShowEmailForm] = useState(false);\r\n  const [emailFormData, setEmailFormData] = useState<EmailFormData>({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n    phone: ''\r\n  });\r\n  const [isSubmittingEmail, setIsSubmittingEmail] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim()) return;\r\n\r\n    const newUserMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: inputMessage,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, newUserMessage]);\r\n    const currentMessage = inputMessage;\r\n    setInputMessage('');\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      // Call the chat API\r\n      const response = await fetch('/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: currentMessage }),\r\n      });\r\n\r\n      const chatResponse: ChatResponse = await response.json();\r\n\r\n      const botResponse: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        text: chatResponse.response,\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        showEmailForm: chatResponse.showEmailForm\r\n      };\r\n\r\n      setMessages(prev => [...prev, botResponse]);\r\n      \r\n      // Show email form if suggested\r\n      if (chatResponse.showEmailForm) {\r\n        setShowEmailForm(true);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      const errorResponse: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        text: 'Sorry, I encountered an error. Please try again or contact us directly at techinfo@neurozic.com',\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorResponse]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // Email form handlers\r\n  const handleEmailFormSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSubmittingEmail(true);\r\n\r\n    try {\r\n      const response = await fetch('/api/send-email', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(emailFormData),\r\n      });\r\n\r\n      const result: EmailResponse = await response.json();\r\n\r\n      if (result.success) {\r\n        // Add success message to chat\r\n        const successMessage: Message = {\r\n          id: Date.now().toString(),\r\n          text: result.message,\r\n          sender: 'bot',\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, successMessage]);\r\n        \r\n        // Reset form and close it\r\n        setEmailFormData({\r\n          name: '',\r\n          email: '',\r\n          subject: '',\r\n          message: '',\r\n          phone: ''\r\n        });\r\n        setShowEmailForm(false);\r\n      } else {\r\n        throw new Error(result.message || 'Failed to send email');\r\n      }\r\n    } catch (error) {\r\n      const errorMessage: Message = {\r\n        id: Date.now().toString(),\r\n        text: 'Sorry, there was an error sending your email. Please try again or contact us directly at techinfo@neurozic.com',\r\n        sender: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsSubmittingEmail(false);\r\n    }\r\n  };\r\n\r\n  const handleEmailFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setEmailFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleShowEmailForm = () => {\r\n    setShowEmailForm(true);\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Chat Button */}\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className={`fixed bottom-0 right-6 z-50 bg-gradient-to-r from-blue-500 to-indigo-600 text-white p-4 rounded-full shadow-lg hover:shadow-xl transform hover:scale-110 transition-all duration-300 ${className}`}\r\n        aria-label=\"Open chat\"\r\n      >\r\n        {isOpen ? (\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        ) : (\r\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\r\n          </svg>\r\n        )}\r\n      </button>\r\n\r\n      {/* Chat Window */}\r\n      {isOpen && (\r\n        <div className=\"fixed bottom-14 right-6 z-50 w-96 h-[500px] bg-white rounded-2xl shadow-2xl border border-gray-200 flex flex-col overflow-hidden\">\r\n          {/* Header */}\r\n          <div className=\"bg-gradient-to-r from-blue-500 to-indigo-600 text-white p-4 flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\r\n              <div>\r\n                <h3 className=\"font-semibold\">Neurozic AI Assistant</h3>\r\n                <p className=\"text-sm opacity-90\">Online now</p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={() => setIsOpen(false)}\r\n              className=\"text-white hover:text-gray-200\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Messages */}\r\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\r\n              >\r\n                <div\r\n                  className={`max-w-[80%] p-3 rounded-2xl ${\r\n                    message.sender === 'user'\r\n                      ? 'bg-blue-500 text-white'\r\n                      : 'bg-gray-100 text-gray-800'\r\n                  }`}\r\n                >\r\n                  <p className=\"text-sm whitespace-pre-wrap\">{message.text}</p>\r\n                  <p className={`text-xs mt-1 ${\r\n                    message.sender === 'user' ? 'text-blue-100' : 'text-gray-500'\r\n                  }`}>\r\n                    {formatTime(message.timestamp)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {isTyping && (\r\n              <div className=\"flex justify-start\">\r\n                <div className=\"bg-gray-100 p-3 rounded-2xl\">\r\n                  <div className=\"flex space-x-1\">\r\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\r\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\r\n                    <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          {/* Email Form Modal */}\r\n          {showEmailForm && (\r\n            <div className=\"absolute inset-0 bg-white z-10 flex flex-col\">\r\n              <div className=\"bg-gradient-to-r from-blue-500 to-indigo-600 text-white p-4 flex items-center justify-between\">\r\n                <h3 className=\"font-semibold\">Send us an Email</h3>\r\n                <button\r\n                  onClick={() => setShowEmailForm(false)}\r\n                  className=\"text-white hover:text-gray-200\"\r\n                >\r\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              \r\n              <form onSubmit={handleEmailFormSubmit} className=\"flex-1 p-4 space-y-4 overflow-y-auto\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name *</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={emailFormData.name}\r\n                    onChange={handleEmailFormChange}\r\n                    required\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none\"\r\n                    placeholder=\"Your full name\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email *</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={emailFormData.email}\r\n                    onChange={handleEmailFormChange}\r\n                    required\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none\"\r\n                    placeholder=\"your.email@example.com\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    value={emailFormData.phone}\r\n                    onChange={handleEmailFormChange}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none\"\r\n                    placeholder=\"+1 (555) 123-4567\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Subject *</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"subject\"\r\n                    value={emailFormData.subject}\r\n                    onChange={handleEmailFormChange}\r\n                    required\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none\"\r\n                    placeholder=\"Project inquiry, quote request, etc.\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Message *</label>\r\n                  <textarea\r\n                    name=\"message\"\r\n                    value={emailFormData.message}\r\n                    onChange={handleEmailFormChange}\r\n                    required\r\n                    rows={4}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none resize-none\"\r\n                    placeholder=\"Tell us about your project, requirements, or questions...\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"flex gap-3 pt-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowEmailForm(false)}\r\n                    className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={isSubmittingEmail}\r\n                    className=\"flex-1 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                  >\r\n                    {isSubmittingEmail ? 'Sending...' : 'Send Email'}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          {/* Input */}\r\n          <div className=\"p-4 border-t bg-white\">\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={handleShowEmailForm}\r\n                className=\"bg-green-500 text-white p-2 rounded-full hover:bg-green-600 transition-colors\"\r\n                title=\"Send Email\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                </svg>\r\n              </button>\r\n              <input\r\n                type=\"text\"\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"Type your message...\"\r\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-full focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none\"\r\n                disabled={isTyping}\r\n              />\r\n              <button\r\n                onClick={handleSendMessage}\r\n                disabled={!inputMessage.trim() || isTyping}\r\n                className=\"bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBot;","'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\n\r\nexport default function FloatingActionButton() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed bottom-6 right-6 z-50\">\r\n      {/* Quick action buttons */}\r\n      <div className={`mb-4 space-y-3 transition-all duration-300 ${isOpen ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-4 pointer-events-none'}`}>\r\n        {/* Contact button */}\r\n        <Link \r\n          href=\"/contact\"\r\n          className=\"group flex items-center bg-white hover:bg-blue-50 rounded-full shadow-lg hover:shadow-xl p-3 transition-all duration-300 hover-lift\"\r\n        >\r\n          <div className=\"w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center mr-3 group-hover:bg-blue-700 transition-colors\">\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n            </svg>\r\n          </div>\r\n          <span className=\"text-gray-700 font-medium pr-4 group-hover:text-blue-600 transition-colors\">Contact Us</span>\r\n        </Link>\r\n\r\n        {/* Services button */}\r\n        <Link \r\n          href=\"/services\"\r\n          className=\"group flex items-center bg-white hover:bg-purple-50 rounded-full shadow-lg hover:shadow-xl p-3 transition-all duration-300 hover-lift\"\r\n        >\r\n          <div className=\"w-12 h-12 bg-purple-600 rounded-full flex items-center justify-center mr-3 group-hover:bg-purple-700 transition-colors\">\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n            </svg>\r\n          </div>\r\n          <span className=\"text-gray-700 font-medium pr-4 group-hover:text-purple-600 transition-colors\">Our Services</span>\r\n        </Link>\r\n\r\n        {/* About button */}\r\n        <Link \r\n          href=\"/about\"\r\n          className=\"group flex items-center bg-white hover:bg-indigo-50 rounded-full shadow-lg hover:shadow-xl p-3 transition-all duration-300 hover-lift\"\r\n        >\r\n          <div className=\"w-12 h-12 bg-indigo-600 rounded-full flex items-center justify-center mr-3 group-hover:bg-indigo-700 transition-colors\">\r\n            <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n          </div>\r\n          <span className=\"text-gray-700 font-medium pr-4 group-hover:text-indigo-600 transition-colors\">About Us</span>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Main FAB */}\r\n      <button\r\n        onClick={toggleMenu}\r\n        className={`w-16 h-16 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 rounded-full shadow-lg hover:shadow-xl flex items-center justify-center transition-all duration-300 hover-lift hover-glow ${isOpen ? 'rotate-45' : ''}`}\r\n        aria-label=\"Quick actions menu\"\r\n      >\r\n        <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}"],"names":["getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","env","__NEXT_IMAGE_OPTS","key","value","Object","entries","undefined","Image"],"mappings":"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","ignoreList":[0,1]}