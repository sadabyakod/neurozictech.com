{"version":3,"sources":["turbopack:///[project]/src/components/AnimateOnScroll.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useRef, ReactNode } from 'react';\r\n\r\ninterface AnimateOnScrollProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n  delay?: number;\r\n  threshold?: number;\r\n}\r\n\r\nexport default function AnimateOnScroll({ \r\n  children, \r\n  className = '', \r\n  delay = 0, \r\n  threshold = 0.1 \r\n}: AnimateOnScrollProps) {\r\n  const elementRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const element = elementRef.current;\r\n    if (!element) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            setTimeout(() => {\r\n              entry.target.classList.add('animate');\r\n            }, delay);\r\n          }\r\n        });\r\n      },\r\n      {\r\n        threshold,\r\n        rootMargin: '50px',\r\n      }\r\n    );\r\n\r\n    observer.observe(element);\r\n\r\n    return () => {\r\n      observer.unobserve(element);\r\n    };\r\n  }, [delay, threshold]);\r\n\r\n  return (\r\n    <div \r\n      ref={elementRef} \r\n      className={`scroll-animate ${className}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"+EAEA,EAAA,EAAA,CAAA,CAAA,OASe,SAAS,EAAgB,UACtC,CAAQ,WACR,EAAY,EAAE,OACd,EAAQ,CAAC,WACT,EAAY,EAAG,CACM,EACrB,IAAM,EAAa,CAAA,EAAA,EAAA,MAAA,AAAM,EAAiB,MA6B1C,MA3BA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,IAAM,EAAU,EAAW,OAAO,CAClC,GAAI,CAAC,EAAS,OAEd,IAAM,EAAW,IAAI,qBACnB,AAAC,IACC,EAAQ,OAAO,CAAC,AAAC,IACX,EAAM,cAAc,EACtB,AADwB,WACb,KACT,EAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAC7B,EAAG,EAEP,EACF,EACA,WACE,EACA,WAAY,MACd,GAKF,OAFA,EAAS,OAAO,CAAC,GAEV,KACL,EAAS,SAAS,CAAC,EACrB,CACF,EAAG,CAAC,EAAO,EAAU,EAGnB,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,IAAK,EACL,UAAW,CAAC,eAAe,EAAE,EAAA,CAAW,UAEvC,GAGP"}